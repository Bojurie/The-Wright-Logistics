{"ast":null,"code":"import _classCallCheck from \"/Users/macbookair/Desktop/WEB -MOBILE-DEVELOPMENT 2021/React-Folder/The_Wright_Logistics/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/macbookair/Desktop/WEB -MOBILE-DEVELOPMENT 2021/React-Folder/The_Wright_Logistics/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/macbookair/Desktop/WEB -MOBILE-DEVELOPMENT 2021/React-Folder/The_Wright_Logistics/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/macbookair/Desktop/WEB -MOBILE-DEVELOPMENT 2021/React-Folder/The_Wright_Logistics/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/macbookair/Desktop/WEB -MOBILE-DEVELOPMENT 2021/React-Folder/The_Wright_Logistics/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/macbookair/Desktop/WEB -MOBILE-DEVELOPMENT 2021/React-Folder/The_Wright_Logistics/my-app/src/components/Dashboard.js\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\nimport TabNav from \"./tabnav\";\nimport NewsletterGrid from \"./newsletter/newsletterGrid\";\nimport RequestsGrid from \"./request/requestGrid\";\n\nvar Dashboard = /*#__PURE__*/function (_Component) {\n  _inherits(Dashboard, _Component);\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.updateHeader(\"Welcome \".concat(this.props.name, \" \"), 'Load Management', true);\n    }\n  }]);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n\n    _this.handleTabChange = function (title) {\n      var tabs = _this.state.tabs; // eslint-disable-next-line\n\n      tabs.map(function (tab) {\n        // eslint-disable-next-line\n        if (tab.title == title) {\n          tab.active = true;\n        } else {\n          tab.active = false;\n        }\n      });\n\n      _this.setState({\n        tabs: tabs\n      });\n    };\n\n    _this.state = {\n      tabs: [{\n        title: \"Newsletter\",\n        active: true,\n        component: /*#__PURE__*/React.createElement(NewsletterGrid, {\n          history: _this.props.history,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 22\n          }\n        })\n      }, {\n        title: \"Requests\",\n        active: false,\n        component: /*#__PURE__*/React.createElement(RequestsGrid, {\n          history: _this.props.history,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 22\n          }\n        })\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dashboard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(TabNav, {\n        handleClick: function handleClick(title) {\n          return _this2.handleTabChange(title);\n        },\n        tabs: this.state.tabs,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    name: state.auth.user.fullname\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Dashboard);","map":{"version":3,"sources":["/Users/macbookair/Desktop/WEB -MOBILE-DEVELOPMENT 2021/React-Folder/The_Wright_Logistics/my-app/src/components/Dashboard.js"],"names":["React","Component","connect","actions","TabNav","NewsletterGrid","RequestsGrid","Dashboard","props","updateHeader","name","handleTabChange","title","tabs","state","map","tab","active","setState","component","history","mapStateToProps","auth","user","fullname"],"mappings":";;;;;;AAAC,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAuB,aAAvB;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,YAAP,MAAyB,uBAAzB;;IAEMC,S;;;;;wCAEgB;AAClB,WAAKC,KAAL,CAAWC,YAAX,mBAAmC,KAAKD,KAAL,CAAWE,IAA9C,QAAuD,iBAAvD,EAA0E,IAA1E;AACF;;;AACA,qBAAYF,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;;AADiB,UAkBpBG,eAlBoB,GAkBF,UAAAC,KAAK,EAAI;AACzB,UAAMC,IAAI,GAAG,MAAKC,KAAL,CAAWD,IAAxB,CADyB,CAEzB;;AACAA,MAAAA,IAAI,CAACE,GAAL,CAAS,UAAAC,GAAG,EAAI;AACd;AACA,YAAIA,GAAG,CAACJ,KAAJ,IAAaA,KAAjB,EAAwB;AACtBI,UAAAA,GAAG,CAACC,MAAJ,GAAa,IAAb;AACD,SAFD,MAEO;AACLD,UAAAA,GAAG,CAACC,MAAJ,GAAa,KAAb;AACD;AACF,OAPD;;AAQA,YAAKC,QAAL,CAAc;AAAEL,QAAAA,IAAI,EAAJA;AAAF,OAAd;AACD,KA9BmB;;AAGjB,UAAKC,KAAL,GAAa;AACZD,MAAAA,IAAI,EAAE,CACJ;AACED,QAAAA,KAAK,EAAE,YADT;AAEEK,QAAAA,MAAM,EAAE,IAFV;AAGEE,QAAAA,SAAS,eAAE,oBAAC,cAAD;AAAgB,UAAA,OAAO,EAAE,MAAKX,KAAL,CAAWY,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHb,OADI,EAMJ;AACER,QAAAA,KAAK,EAAE,UADT;AAEEK,QAAAA,MAAM,EAAE,KAFV;AAGEE,QAAAA,SAAS,eAAE,oBAAC,YAAD;AAAc,UAAA,OAAO,EAAE,MAAKX,KAAL,CAAWY,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHb,OANI;AADM,KAAb;AAHiB;AAiBnB;;;;6BAcQ;AAAA;;AACP,0BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AACE,QAAA,WAAW,EAAE,qBAAAR,KAAK;AAAA,iBAAI,MAAI,CAACD,eAAL,CAAqBC,KAArB,CAAJ;AAAA,SADpB;AAEE,QAAA,IAAI,EAAE,KAAKE,KAAL,CAAWD,IAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AASA;;;;EA9CqBZ,S;;AAgDxB,SAASoB,eAAT,CAAyBP,KAAzB,EAAgC;AAC9B,SAAM;AACHJ,IAAAA,IAAI,EAAEI,KAAK,CAACQ,IAAN,CAAWC,IAAX,CAAgBC;AADnB,GAAN;AAGD;;AAGD,eAAetB,OAAO,CAACmB,eAAD,EAAkBlB,OAAlB,CAAP,CAAkCI,SAAlC,CAAf","sourcesContent":[" import React, { Component } from \"react\";\n import {connect } from 'react-redux';\n import * as actions from '../actions';\n import TabNav from \"./tabnav\";\n import NewsletterGrid from \"./newsletter/newsletterGrid\";\n import RequestsGrid from \"./request/requestGrid\";\n\n class Dashboard extends Component {\n\n   componentDidMount() {\n     this.props.updateHeader(`Welcome ${this.props.name} `, 'Load Management', true);\n  }\n   constructor(props) {\n     super(props);\n\n     this.state = {\n      tabs: [\n        {\n          title: \"Newsletter\",\n          active: true,\n          component: <NewsletterGrid history={this.props.history} />\n        },\n        {\n          title: \"Requests\",\n          active: false,\n          component: <RequestsGrid history={this.props.history} />\n        }\n      ]\n    };\n  }\n  handleTabChange = title => {\n    const tabs = this.state.tabs;\n    // eslint-disable-next-line\n    tabs.map(tab => {\n      // eslint-disable-next-line\n      if (tab.title == title) {\n        tab.active = true;\n      } else {\n        tab.active = false;\n      }\n    });\n    this.setState({ tabs });\n  };\n  render() {\n    return (\n      <div className=\"dashboard\">\n        <TabNav\n          handleClick={title => this.handleTabChange(title)}\n          tabs={this.state.tabs}\n        />\n      </div>\n      \n     );\n   }\n }\n function mapStateToProps(state) {\n   return{\n      name: state.auth.user.fullname\n   }\n }\n\n \n export default connect(mapStateToProps, actions)(Dashboard);"]},"metadata":{},"sourceType":"module"}